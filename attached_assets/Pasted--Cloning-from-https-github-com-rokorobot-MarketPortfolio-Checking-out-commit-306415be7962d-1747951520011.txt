==> Cloning from https://github.com/rokorobot/MarketPortfolio
==> Checking out commit 306415be7962d4263aa1dbdc9cff7a5552d3280f in branch main
==> Using Node.js version 22.14.0 (default)
==> Docs on specifying a Node.js version: https://render.com/docs/node-version
==> Using Bun version 1.1.0 (default)
==> Docs on specifying a bun version: https://render.com/docs/bun-version
==> Running build command 'npm install; npm run build'...
added 582 packages, and audited 583 packages in 10s
70 packages are looking for funding
  run `npm fund` for details
7 moderate severity vulnerabilities
To address issues that do not require attention, run:
  npm audit fix
To address all issues (including breaking changes), run:
  npm audit fix --force
Run `npm audit` for details.
> rest-express@1.0.0 build
> vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist
vite v5.4.10 building for production...
transforming...
Browserslist: browsers data (caniuse-lite) is 7 months old. Please run:
  npx update-browserslist-db@latest
  Why you should do it regularly: https://github.com/browserslist/update-db#readme
âœ“ 1935 modules transformed.
rendering chunks...
computing gzip size...
../dist/public/index.html                   1.58 kB â”‚ gzip:   0.62 kB
../dist/public/assets/index-C5sLWVwJ.css   71.62 kB â”‚ gzip:  12.35 kB
../dist/public/assets/index-nxsoFXGd.js   789.30 kB â”‚ gzip: 236.27 kB
(!) Some chunks are larger than 500 kB after minification. Consider:
- Using dynamic import() to code-split the application
- Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
- Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.
âœ“ built in 5.51s
  dist/index.js  122.8kb
âš¡ Done in 9ms
==> Uploading build...
==> Uploaded in 10.5s. Compression took 3.9s
==> Build successful ðŸŽ‰
==> Deploying...
> rest-express@1.0.0 start
> NODE_ENV=production node dist/index.js
Starting database migration...
SendGrid API key configured successfully
Starting database migration...
Starting database migration...
==> No open ports detected, continuing to scan...
==> Docs on specifying a port: https://render.com/docs/web-services#port-binding
==> No open ports detected, continuing to scan...
==> Docs on specifying a port: https://render.com/docs/web-services#port-binding
Error during migration: ErrorEvent {
  [Symbol(kTarget)]: WebSocket {
    _events: [Object: null prototype] {
      error: [Function],
      message: [Function],
      close: [Function],
      open: [Function]
    },
    _eventsCount: 4,
    _maxListeners: undefined,
    _binaryType: 'arraybuffer',
    _closeCode: 1006,
    _closeFrameReceived: false,
    _closeFrameSent: false,
    _closeMessage: <Buffer >,
    _closeTimer: null,
    _errorEmitted: true,
    _extensions: {},
    _paused: false,
    _protocol: '',
    _readyState: 3,
    _receiver: null,
    _sender: null,
    _socket: null,
    _bufferedAmount: 0,
    _isServer: false,
    _redirects: 0,
    _autoPong: true,
    _url: 'wss://dpg-d0npfdruibrs738s6fsg-a.oregon-postgres.render.com/v2',
    _req: null,
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false
  },
  [Symbol(kType)]: 'error',
  [Symbol(kError)]: Error: connect ETIMEDOUT 35.227.164.209:443
      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1634:16) {
    errno: -110,
    code: 'ETIMEDOUT',
    syscall: 'connect',
    address: '35.227.164.209',
    port: 443
  },
  [Symbol(kMessage)]: 'connect ETIMEDOUT 35.227.164.209:443'
}
file:///opt/render/project/src/node_modules/@neondatabase/serverless/index.mjs:1345
o?t(o):n(u)},"cb"),s=new r(function(o,u){n=o,t=u}).catch(o=>{throw Error.captureStackTrace(
                                                                         ^
ErrorEvent {
  [Symbol(kTarget)]: WebSocket {
    _events: [Object: null prototype] {
      error: [Function: onError] {
        [Symbol(kIsForOnEventAttribute)]: false,
        [Symbol(kListener)]: [Function (anonymous)]
      },
      message: [Function: onMessage] {
        [Symbol(kIsForOnEventAttribute)]: false,
        [Symbol(kListener)]: [Function (anonymous)]
      },
      close: [Function: onClose] {
        [Symbol(kIsForOnEventAttribute)]: false,
        [Symbol(kListener)]: [Function (anonymous)]
      },
      open: [Function: onOpen] {
        [Symbol(kIsForOnEventAttribute)]: false,
        [Symbol(kListener)]: [Function: handleWebSocketOpen]
      }
    },
    _eventsCount: 4,
    _maxListeners: undefined,
    _binaryType: 'arraybuffer',
    _closeCode: 1006,
    _closeFrameReceived: false,
    _closeFrameSent: false,
    _closeMessage: Buffer(0) [Uint8Array] [],
    _closeTimer: null,
    _errorEmitted: true,
    _extensions: {},
    _paused: false,
    _protocol: '',
    _readyState: 3,
    _receiver: null,
    _sender: null,
    _socket: null,
    _bufferedAmount: 0,
    _isServer: false,
    _redirects: 0,
    _autoPong: true,
    _url: 'wss://dpg-d0npfdruibrs738s6fsg-a.oregon-postgres.render.com/v2',
    _req: null,
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false
  },
  [Symbol(kType)]: 'error',
  [Symbol(kError)]: Error: connect ETIMEDOUT 35.227.164.209:443
      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1634:16) {
    errno: -110,
    code: 'ETIMEDOUT',
    syscall: 'connect',
    address: '35.227.164.209',
    port: 443
  },
  [Symbol(kMessage)]: 'connect ETIMEDOUT 35.227.164.209:443'
}
Node.js v22.14.0
==> Exited with status 1
==> Common ways to troubleshoot your deploy: https://render.com/docs/troubleshooting-deploys
==> Running 'npm run start'
> rest-express@1.0.0 start
> NODE_ENV=production node dist/index.js
Starting database migration...
SendGrid API key configured successfully
Starting database migration...
Starting database migration...